[project]
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
name = "safir"
description = "The Rubin Observatory SQuaRE framework for FastAPI services."
license = {file = "LICENSE"}
readme= "README.md"
keywords = [
    "rubin",
    "lsst",
]
# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: POSIX",
    "Typing :: Typed",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi",
    "httpx>=0.20.0",
    "pydantic",
    "starlette",
    "structlog>=21.2.0",
]
dynamic = ["version"]

[project.optional-dependencies]
arq = [
    "arq>=0.23"
]
db = [
    "asyncpg",
    "sqlalchemy[asyncio]",
]
dev = [
    "asgi-lifespan",
    "coverage[toml]",
    "flake8",
    "mypy",
    "pre-commit",
    "psycopg2",
    "pytest",
    "pytest-asyncio",
    "respx",
    "sqlalchemy[mypy]",
    # documentation
    "documenteer[guide]>=0.7.0b2",
]
gcs = [
    "google-auth",
    "google-cloud-storage"
]
kubernetes = [
    "kubernetes_asyncio"
]

[[project.authors]]
name = "Association of Universities for Research in Astronomy, Inc. (AURA)"
email = "sqre-admin@lists.lsst.org"

[project.urls]
Homepage = "https://safir.lsst.io"
Source = "https://github.com/lsst-sqre/safir"
"Change log" = "https://safir.lsst.io/changelog.html"
"Issue tracker" = "https://github.com/lsst-sqre/safir/issues"

[build-system]
requires = [
    "setuptools>=61",
    "wheel",
    "setuptools_scm[toml]>=6.2"
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]

[tool.coverage.run]
parallel = true
branch = true
source = ["safir"]

[tool.coverage.paths]
source = ["src", ".tox/*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]

[tool.black]
line-length = 79
target-version = ['py37']
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''
# Use single-quoted strings so TOML treats the string like a Python r-string
# Multi-line strings are implicitly treated by black as regular expressions

[tool.isort]
include_trailing_comma = true
multi_line_output = 3
known_first_party = ["safir", "tests"]
skip = ["docs/conf.py"]

[tool.pytest.ini_options]
asyncio_mode = "strict"
python_files = [
    "tests/*.py",
    "tests/*/*.py"
]

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true
local_partial_types = true
no_implicit_reexport = true
strict_equality = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
plugins = [
    "sqlalchemy.ext.mypy.plugin"
]
