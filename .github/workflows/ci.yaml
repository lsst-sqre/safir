name: Python CI

env:
  # Default Python version used for all jobs other than test, which uses a
  # matrix of supported versions. Quote the version to avoid interpretation as
  # a floating point number.
  PYTHON_VERSION: "3.12"

"on":
  merge_group: {}
  pull_request: {}
  push:
    branches-ignore:
      # These should always correspond to pull requests, so ignore them for
      # the push trigger and let them be triggered by the pull_request
      # trigger, avoiding running the workflow twice.  This is a minor
      # optimization so there's no need to ensure this is comprehensive.
      - "dependabot/**"
      - "renovate/**"
      - "tickets/**"
      - "u/**"
  release:
    types: [published]

jobs:
  lint:

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1

  test:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        python:
          - "3.11"
          - "3.12"

    steps:
      - uses: actions/checkout@v4

      - name: Run nox
        uses: lsst-sqre/run-nox@v1
        with:
          cache-dependency: "*/pyproject.toml"
          nox-sessions: "typing test"
          python-version: ${{ matrix.python }}

  docs:

    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Install Graphviz
        run: sudo apt-get install graphviz

      - name: Run nox
        uses: lsst-sqre/run-nox@v1
        with:
          cache-dependency: "*/pyproject.toml"
          nox-sessions: "docs docs-linkcheck"
          python-version: ${{ env.PYTHON_VERSION }}

      # Only attempt documentation uploads for tagged releases and pull
      # requests from ticket branches in the same repository.  This avoids
      # version clutter in the docs and failures when a PR doesn't have access
      # to secrets.
      - name: Upload to LSST the Docs
        uses: lsst-sqre/ltd-upload@v1
        with:
          project: "safir"
          dir: "docs/_build/html"
          username: ${{ secrets.LTD_USERNAME }}
          password: ${{ secrets.LTD_PASSWORD }}
        if: >
          github.event_name != 'merge_group'
          && (github.event_name != 'pull_request'
              || startsWith(github.head_ref, 'tickets/'))

  test-packaging:

    name: Test packaging
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: [lint, test, docs]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - name: Test building and publishing safir
        uses: lsst-sqre/build-and-publish-to-pypi@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          upload: false
          working-directory: "safir"

      - name: Test building and publishing safir-arq
        uses: lsst-sqre/build-and-publish-to-pypi@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          upload: false
          working-directory: "safir-arq"

      - name: Test building and publishing safir-logging
        uses: lsst-sqre/build-and-publish-to-pypi@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          upload: false
          working-directory: "safir-logging"

  pypi:

    name: Upload release to PyPI
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [lint, test, docs, test-packaging]
    environment:
      name: pypi
      url: https://pypi.org/p/safir
    permissions:
      id-token: write
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history for setuptools_scm

      - uses: lsst-sqre/build-and-publish-to-pypi@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          working-directory: "safir"

      - uses: lsst-sqre/build-and-publish-to-pypi@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          working-directory: "safir-arq"

      - uses: lsst-sqre/build-and-publish-to-pypi@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          working-directory: "safir-logging"
